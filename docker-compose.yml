version: '2'

services:
  api:
    build: 
      context: '.'
      dockerfile: '.docker/prod/Dockerfile'
    command: ['sh', 'wait-for.sh', 'db:5432', '--', 'npm', 'run', 'docker-start']
    depends_on: 
      - 'db'
    ports:
      - '3000:3000'
    restart: 'always'
    links:
      - 'db'
    environment:
      NODE_ENV: 'docker'

      DB_HOST: 'db'
      DB_PORT: 5432
      DB_USERNAME: 'postgres'
      DB_PASSWORD: 'PUT_SUPER_SECRET_DB_PASSWORD_HERE'

      POSTMARK_CLIENT_KEY: 'PUT_POSTMARK_CLIENT_KEY_HERE'
      POSTMARK_TEMPLATE: 'PUT_POSTMARK_TEMPLATE_HERE'
      EVENTBRITE_TOKEN: 'PUT_EVENTBRITE_TOKEN_HERE'
      JWT_KEY: 'PUT_JWT_SECRET_KEY_HERE'
      SLACK_WEBHOOK_URL: 'PUT_SLACK_WEBHOOK_URL_HERE'
      BEAMS_INSTANCE_ID: 'PUT_BEAMS_INSTANCE_ID_HERE'
      BEAMS_SECRET_KEY: 'PUT_BEAMS_SECRET_KEY_HERE'
      VAPID_PUBLIC_KEY: 'GENERATE_KEYS_PUT_HERE'
      VAPID_PRIVATE_KEY: 'GENERATE_KEYS_PUT_HERE'

      FROM_EMAIL: 'PUT_EMAIL_FOR_SENDING_LOGINS_HERE'
      FRONTEND_URL: 'PUT_WEBAPP_URL_HERE'

  db:
    image: 'postgres:10.3-alpine'
    volumes:
      - 'db_data:/var/lib/postgresql/data'
    restart: 'always'
    environment:
       POSTGRES_PASSWORD: 'PUT_SUPER_SECRET_DB_PASSWORD_HERE'
       POSTGRES_USER: 'postgres'
       POSTGRES_DB: 'skilled_acolyte_db'

volumes:
  db_data:
